apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'jacoco'

group = "com.bitdubai.fermat.cry"
version = '1.0.1'
sourceCompatibility = 1.7

pmd {
    toolVersion = '5.1.3'
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

configurations {
    deployerJars
}

jar {
    manifest {
        attributes 'Implementation-Title': 'fermat-cry-plugin-crypto-network-bitcoin-bitdubai',
                'Implementation-Version': '1.0.1'
    }
}


repositories {
    mavenCentral ()
    maven {
        url "https://repository-fermat.forge.cloudbees.com/release/"
        credentials {
            username 'bitdubai.repo'
            password 'bud@pestdcd16c'
        }
    }
}

dependencies {
    compile project(':fermat-api')
    compile project(':fermat-cry-api')
    compile project(':fermat-pip-api')
    testCompile 'junit:junit:4.11'
    testCompile 'com.googlecode.catch-exception:catch-exception:1.2.0'
    compile('org.bitcoinj:bitcoinj-core:0.13.3')
    compile 'log4j:log4j:1.2.17'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
        mavenDeployer {
            configuration = configurations.deployerJars
            repository (url: "dav:https://repository-fermat.forge.cloudbees.com/release/") {
                authentication(userName: 'bitdubai.repo', password: 'bud@pestdcd16c')
            }
        }
    }
}

def jacocoHtmlReport = ""

jacocoTestReport{
    reports{
        jacocoHtmlReport = "Code Coverage HTML Report: file://" + html.destination + "/index.html"
    }
}

task testCoverage(dependsOn: jacocoTestReport) << {
    println jacocoHtmlReport
}

jacocoTestReport.dependsOn clean, test
jacocoTestReport.mustRunAfter test
test.mustRunAfter clean
