apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

group = "com.bitdubai.wallet"
sourceCompatibility = 1.7
version = '1.0.0'

configurations {
    deployerJars
}

jar {
    manifest {
        attributes 'Implementation-Title'   : 'fermat-pip-android-addon-os-logger-bitdubai',
                   'Implementation-Version' : '1.0.0'
    }
}

repositories {
    mavenCentral ()
    maven {
            url "https://repository-fermat.forge.cloudbees.com/release/"
            credentials {
                username 'bitdubai.repo'
                password 'bud@pestdcd16c'
            }
        }
}

pmd {
    toolVersion = '5.1.3'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.android:android:4.1.1.4'

    //compile 'com.bitdubai.wallet:fermat-pip-api:1.0.2'
    compile project(':fermat-api')
    compile 'org.slf4j:slf4j-api:1.7.9'
    compile 'org.slf4j:slf4j-log4j12:1.7.9'
    compile 'org.apache.commons:commons-lang3:3.3'




    deployerJars "org.apache.maven.wagon:wagon-webdav:1.0-beta-2"
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {

    repositories {

        flatDir {

            dirs 'repos'
        }

        mavenDeployer {
            configuration = configurations.deployerJars
            repository (url: "dav:https://repository-fermat.forge.cloudbees.com/release/") {
                authentication(userName: 'bitdubai.repo', password: 'bud@pestdcd16c')
            }
        }
    }
}

tasks.withType (FindBugs) {

    excludeFilter = file("config/findbugs/findbugs-exclude-filter.xml")
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

def jacocoHtmlReport = ""

jacocoTestReport{
    reports{
        jacocoHtmlReport = "Code Coverage HTML Report: file://" + html.destination + "/index.html"
    }
}

task testCoverage(dependsOn: jacocoTestReport) << {
    println jacocoHtmlReport
}

jacocoTestReport.dependsOn clean, test
jacocoTestReport.mustRunAfter test
test.mustRunAfter clean