image::https://github.com/bitDubai/media-kit/blob/master/Readme%20Image/Coins/COR.jpg[Core]

== Chapter 3: Fermat Core Platform
This is the *core platform* of Fermat Multi-platform System. It contains the deepest levels of layers in the layers stack. Its components encapsulate the basics definitions and functionalities that let Fermat operate as an _integrated system_. +
The platform first defines a _plug-in identity_ for each plug-in (this is done only ONCE for the whole system), which let the plug-in be *recognized* as member of Fermat and then access to certain data specifically owned by it (like accessing to the file system or data base systems, etc). Then it put them to run ( see [system initialization] ) and builds the pattern of relationships between the isolated plug-ins, thus deploying all the system wide infrastructure. +
Fermat Core Platform is written in JAVA as the most of Fermat, and that there is a JAVA implementation for each known operating system, that makes Fermat *code base portable*. + 
After initialization, this platform monitors the way the system is behaving as a whole.

.Platform components
fermat core :: 
Initializes all system-wide plug-ins and start a specific *core component* for each platform/superlayer running on Fermat, which in turn initializes the platform/superlayer's specific set of plugins.
android core :: 
Initializes android's components that connect Fermat to the android user's environment.
platform specific core ::
There's a *core component* for each one of the platform existent in Fermat, which creates the _plug-in identity_ and initializes all platform/superlayer's specific plug-ins: +

////
. _Operating Systems core_
. _BlockChain core_
. _P2P Network and Communication core_
. _Plug-ins Platform core_
. _Wallet Production & Distribution core_
. _Crypto Currency core_
. _Crypto Commodity Money core_
. _Bank Notes core_
. _Shoping core_
. _Digital Assets core_
. _Marketing core_
. _Crypto Brokers core_
. _Crypto Distribution Network core_
. _Distributed Private Network_

[system initialization]
=== Initialization

The application written for the chosen Operating System of your device (eg. Android in Fermat'S first release) is a bundle of software packages that altogether build Fermat MULTI-PLATFORM SYSTEM. Few components are OS dependent but most of them (written in JAVA) is not (i.e. OS INDEPENDENT). +
At its core we find Fermat CORE PLATFORM which is responsible for deploying the multi-platform infrastructure and initializing it. 

NOTE: Android is a *special case* because of some programming restrictions that only allow initialization from components written in android's language. Therefore the initialization sequence in this case, begins in the component *android core* which is the first one to become active and after that, it sets Fermat CORE to run.

Fermat CORE initializes every single platform of the system and instantiate every single plug-in giving the "start" signal by means of an usual "service"interface (each plug-in knows what "start"means in each case). Then, in a second initialization round, the core platform collects information from the corresponding *application public interfaces (API)*, creates a "communication channel" between each component of the system and delivers to each one the *reference* on its dependence to consume services from one another.  + 
 
NOTE: Fermat Plug-ins are not allowed to consume services directly among them, but referencing themselves to the corresponding platform via the platform's *api component* 

.Fermat Api components
* There is an *api component* for each Fermat platform, where *public interfaces* of each plug-in are published in order to let them consume services from others living in the same platform.

When all the basic infrastructure is laid out and some initial plug-ins are running, then the process thread turns to the *OS application* which starts the graphic interfaces and resources needed to interact with the user, and the application opens its "starting screen". +
From that moment on, the activation of other dormant components of Fermat will follow according user's demand (depending on users activity).


TIP: Following in this chapter the description of each platform and each layer within each platform. We recommend to visit Fermat official site (http://fermat.org) to have a picture in mind when reading, to help understand the system structure. _Layers_ description follow the sequence from bottom to top (like "stacking" them), and _platforms_ from left to right. 
////


:numbered!:

image::https://github.com/bitDubai/media-kit/blob/master/Readme%20Image/Background/Front_Bitcoin_scn_low.jpg[FermatCoin]
  
=== _Continue Reading ..._
link:book-chapter-04.asciidoc[Next Chapter]

link:book-chapter-02.asciidoc[Previous Chapter]


