== Iniciación en fermat sobre la plataforma Android

=== Comenzaré con una breve introduccion a la aplicación para que sepan cual será su ubicación dentro de Fermat.

Basicamente deberia comenzar con el concepto de wallet o cartera. Una Wallet es un applicación que en su version más simple nos permite enviar y recibir dinero. En este caso nos abocamos al intercambio de cryptocurrencies (por el momento Bitcoins).
A partir de este concepto podemos decir que lo que nosotros estamos construyendo es una fabrica de Wallet, las cuales derivan de una wallet padre llamada reference Wallet. Aquí es donde nos vamos a centrar en este momento en la capa de Android:
La reference Wallet posee 5 tabs en este momento, cada uno con una función especifica:

* Transaction: permite ver todas las transacciones realizadas, se hace una diferenciación por transacciones en Book balance y en Available balance
* Contacts:    permite ver un listado de contactos disponibles y posee un boton el cual permite el ingreso
* Send:        permite enviar bitcoins a un contacto o a una dirección de wallet desconocida por medio de su address
* Receive:     permite recibir bitcoins obteniendo una direccion para que otras wallet puedan enviar el dinero
* Balance:     permite ver el saldo disponible en el book balance y el availabe balance

Luego de los tabs en este momento se encuentra:

*  CreateContacts: pantalla que nace al hacer un click sobre el boton que se encuentra en el tab Contacts, como su nombre lo indica este fragmento se encarga de la creacion de los contactos

== Manejo de sesiones:
Uno de los problemas encontrados es la persistencia de datos en memoria ya que como conocen el ciclo de vida un fragmento al no estar visible se elimina y se vuelve a crear al llamarlo nuevamente. Estos datos deben estar guardados en algún lugar en caso de que el usuario quiera cambiar de wallet y dejar la sesion abierta, para resolver esto se implementó la creación de una sesión por cada wallet y un wallet manager que se encarga de la gestión de dichas sesiones teniendo así la posibilidad de regresar al momento en el que se encontraba el usuario al cambiar de pantalla.
El developer puede así persistir objetos en la sesión de cualquier tipo, dentro de un map que trabaja con una key y el objeto que el developer necesite guardar.

== Manejo de la estructura de navegación:
Como lo habrán notado Fermat es una aplicación distinta al resto de las aplicaciones android, posee una estructura de navegación propia. la cual se basa en pantallas y subPantallas que se van "pintando" desde objetos cargados en tiempo de ejecución , desde archivos, que entregan la información sobre que es lo que se necesita dibujar en cada pantalla/sub pantalla.
Para realizar esto a nivel de la Reference wallet hay un mecanismo implementado:

* Cada tipo de Wallet posee un Enum con los fragmentos, que se llama por medió de un Factory (en el core) y te dice que controladores se pueden "pintar" en pantalla, con esto quiero decir un identificador de la libreria a la cual debe ir a buscar los fragmentos (controladores) para la wallet. Los nombres de estos fragmentos deben estar en la estructura de navegación de la wallet para ser invocados.
* En la estructura de navegación tambien se pueden determinar tabs,colores,acciones, posiciones de las fragmentos a la hora de hacer el back, entre otras cosas.

