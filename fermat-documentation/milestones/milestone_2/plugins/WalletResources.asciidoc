= Wallet Resources - Network Service Layer

Este plugin es un nodo de una DAPP (Distributed Application). Administra los recursos y la estructura
de navegación de las wallets que reciden en el dispositivo (instalados y publicados). También se
encarga de obtener los recursos y estructura de navegación de wallets que desean instalarse. Cuando
un plugin requiere un recurso para una wallet, este plugin es quien se lo entrega. +
También entrega al Wallet Manager la estructura de navegación para que él pueda instalar una nueva
wallet. +


En términos generales esta DAPP hace lo siguiente:

.A nivel de Recursos
* Le da servicios a las WalletModule para obtener los recursos que necesitan las ReferenceWallets que
corren encima de ellas.
* Almacena los recursos de las wallets instaladas. Para esto lleva la cuenta de cuantas walles hay
instaladas de cada tipo, y mientras la cuenta sea mayor que cero garantiza de que los recursos
estarán almacenados localmente.
* Almacena los recursos de las wallets publicadas (posiblemente no instaladas) y garantiza que no
serán borrados.
* Almacena los recursos de wallets no instaladas pero relevantes para la región. Esta funcionalidad
le permite a la red de nodos corriendo este network service, servirse unos a otros de los recursos
de distintos tipos de wallets, elminando la dependencia de un punto central.
* Es capaz de obtener los recursos de wallets de los repositorios centralizados desde donde nacen
originalmente.

.A nivel de Estructura de Navegación
* Le da servicio al Wallet Manager cuando necesita la estructura de navegación de un tipo determinado
de wallet durante su proceso de instalación.
* Al igual que los recursos, mantiene la estructura de navegación de los distintos tipos de wallets
instalados, garantizando de que los tendrá localmente mientras ese tipo de wallet tenga al menos una instancia instalada.
* Mantiene la estructura de navegación de wallets no instaladas para servirlas a otros
peers corriendo el mismo network service, habilitando de esta manera la decentralización de este tipo de información.
* Sabe como localizar la Estructura de Navegación del repositorio centralizado desde donde nace ese tipo de wallet.


A considerar

Queremos mantener independientes los recursos, el idioma y la estructura de navegación de la wallet.
De esta manera, cuando un usuario quiera descargar una wallet podrá elegir entre distintos paquetes
de idiomas y skins (diseños gráficos). Además de las opciones para el usuario,

== Recursos

Los recursos de una wallet comprenden lo que llamamos un Skin y un paquete de idiomas:

Skin:: Comprende imágenes, audio, video, fonts y layouts utilizados en la wallet.
Language:: Comprende al conjunto de strings usadas en la wallet.

Las referencias a los recursos deberán hacerse a través de nombres que se usarán para indexarlos y no
a través de rutas (paths) o valores puntuales que puedan cambiar. Por ejemplo. si uno quiere colocar
un mensaje en un botón no querríamos escribir directamente el string que va a mostrarse en el código del
botón dado que esto haría que al cambiar de idioma debamos retocar el código. Lo que buscamos es que la
aplicación pida el texto que va en el botón cuando se está corriendo y se saque este texto del wallet
resources. Así, el botón dirá que tiene referencia al texto llamado "botón1Text" y el archivo de strings
será quién indique a qué string corresponde la clave "botón1Text". +
Esta misma idea la usaremos con los demás recursos.

Nos preguntamos entonces cómo representar esta información que relaciona las claves con los valores que
referencian, cómo almacenar los archivos y cómo editarlos. También requerimos identificar quién y cómo
se referencia esta información. +





