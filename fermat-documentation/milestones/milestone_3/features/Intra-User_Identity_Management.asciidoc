# Administración de Intra-User identities
* Para poder usar ciertas wallets del fermat, será necesario tener al menos una identidad de tipo Intra-User, ocasionalmente se usará la misma en determinadas sub-apps.
* La plataforma permite la administración de estas identidades dentro de la sub-app Intra-User.
* El usuario podrá crear, modificar o listar sus identidades Intra-User.
* Estas identidades se encuentran vinculadas al Usuario Device-User que se encuentre logeado al momento de su creación.

## Escenarios
* Crear una identidad Intra-User
  * Dado que el usuario para identificarse en ciertas sub-apps de la plataforma requiere el uso de una identidad Intra-User
  * Cuando el usuario desee crear una identidad Intra-User
  * Entonces podrá crear una identidad Intra-User desde la sub-app Intra-User
  * Es necesario el ingreso de un alias para la identidad que no exista en ese dispositivo para el Device-User logeado
  * Caso contrario arrojará una excepción
  * Es opcional la carga de una foto de perfil

* Cambiar la foto de perfil de una identidad Intra-User
  * Dado que el usuario quiere cambiar la foto de perfil de una identidad Intra-User para ser reconocido por el resto de los usuarios de la plataforma
  * Cuando el usuario seleccione una identidad Intra-User
  * Entonces podrá cambiar la foto de perfil de una identidad Intra-User
  * Es necesario cargar una foto de perfil
  * Caso contrario arrojará una excepción
  * Es necesario que el Intra-User exista
  * Caso contrario arrojará una excepción

* Listar identidades Intra-User
  * Dado que el usuario necesita seleccionar entre las identidades Intra-User disponibles
  * Cuando el usuario ingrese en la sub-app de Intra-Users
  * Entonces podrá ver la lista de Intra-User identities vinculadas al Device-User logeado

## Plugins Involucrados
* DMP/Android: Intra-User Sub-App
  * Tendrá dependencia del Intra-User Module.
  * Es la interfaz gráfica que nos permite administrar las identidades Intra-User.
  * Es el punto de contacto con el usuario final.
  * Poseerá las actividades/fragmentos que sean necesarios para la administración de este tipo de identidad:
    * Creación de Intra-User identityPublicKey:
      * Solicitará el ingreso de forma obligatoria de un valor para el alias del Intra-User.
      * Permitirá la carga opcional de una imagen para el Intra-User.
    * Visualizacion de Intra-User identityPublicKey:
      * Mostrará el alias y la imagen del Intra-User.
      * Permitirá desde aquí modificar la foto de perfil del Intra-User.
    * Lista de Intra-User identities:
      * Mostrará por pantalla los Intra-Users creados con el Device-User logeado.
      * Tendrá un link a la Creación de Intra-User para darle al usuario la posibilidad de crear una nueva identidad.

* DMP/plugin: Intra-User Module
  * Es el intermediario entre la interfaz gráfica y la plataforma de plugins.
  * Será el encargado de centralizar todas las acciones que se relacionen con la administración de los Intra-Users en la plataforma.
  * Tendrá referencia a los siguientes plugins:
    * DMP/plugin Intra-User Identity

* DMP/plugin: Intra-User Identity
  * Gestiona los Intra-Users.
  * Será el encargado de mantener una base de datos y un sistema de archivos con los datos de los mismos.
  * Tendrá referencia a los siguientes plugins:
    * PluginFileSystem (según el SO que se encuentre corriendo se le entregará el de Android u otro)
    * PluginDatabaseSystem (según el SO que se encuentre corriendo se le entregará el de Android u otro)
    * PIP/plugin Device-User User
      * Poseerá los métodos necesarios para la administración de las identidades intra-user de este dispositivo.
  * Listar los Intra-Users vinculados al Device-User logeado.
  * Crear nuevo Intra-User:
    * Lo vincula automáticamente con el Device-User logeado.
    * Crea el juego de claves privada/pública para el mismo.
  * Modificar la imagen de perfil de un Intra-User.
  * Firmar mensajes con la clave privada del Intra-User.
  * Desencriptar mensajes con la clave privada del Intra-User.

* PIP/plugin Device-User User
 * Gestiona los Device-Users e indica cuál es el que se encuentra logueado en la plataforma.
 * Tendrá un método que retornará el Devicer-User logeado.

## Flujos
* Crear una identidad Intra-User:
 * DMP/Android: Intra-User Sub-App
   * Fragmento IntraUserCreateFragment
     * Campos: alias
     * Carga de archivo: foto de perfil
     * Submit: va a DMP/plugin Intra-User Module
 * DMP/plugin: Intra-User Module
   * Manager del plugin
     * método _createIntraUser(alias, foto de perfil)_
 * DMP/plugin: Intra-User Identity
   * Manager del plugin
     * método _createNewIntraUser(alias, foto de perfil)_

* Cambiar la foto de perfil de una identidad Intra-User:
 * DMP/Android: Intra-User Sub-App
   * Fragmento IntraUserViewFragment
     * Campos: alias (sólo lectura)
     * Carga de archivo: foto de perfil
     * Submit: va a DMP/plugin Intra-User Module
 * DMP/plugin: Intra-User Module
   * Manager del plugin
     * método _setNewProfileImage(foto de perfil, clave pública del intra-user)_
 * DMP/plugin: Intra-User Identity
   * Manager del plugin
     * método _setNewProfileImage(foto de perfil, clave pública del intra-user)_

* Listar identidades Intra-User:
 * DMP/Android: Intra-User Sub-App
   * Fragmento IntraUserListFragment
     * Lista Intra-Users
       * Campos:
         * foto de Perfil
          * alias
     * Link a "Crear una identidad Intra-User"
 * DMP/plugin: Intra-User Module
   * Manager del plugin
     * método _showAvailableLoginIdentities()_
 * DMP/plugin: Intra-User Identity
   * Manager del plugin
     * método _getIntraUsersFromCurrentDeviceUser()_

## Persistencia
* Las identidades de tipo Intra-User se almacenarán de forma mixta en base de datos y archivos (para fortalecer el tema de la seguridad).
* En base de datos se persistirá la siguiente información:
 * Alias
 * PublicKey del Intra-User
 * PublicKey del Device-User
* En archivo:
 * Foto de perfil
 * PrivateKey del Intra-User (el nombre del archivo deberá ser la publicKey del Intra-User)
