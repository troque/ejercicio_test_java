= Crypto Addresses Network Service

Cuando un intra user quiere agregar como contacto a otro envía una solicitud de contacto junto con una
direcicón a la que le deberían enviar dinero cuando lo agreguen. Adjunta a la dirección se envían datos
descriptivos de la wallet que envía la solicitud para analizar la compatibilidad de las wallets del
otro usuario (quien recibe la solicitud). +

Cuando una solicitud llega se envía al wallet manager de la capa middleware un evento con los datos
de la misma, el mismo lee los datos descriptivos de la wallet desde la que se envía la solicitud y
calcula la lista de las wallets que son compatibles y pueden agendar al contacto. Luego llama al
método setCompatibleWallets del network service crypto addesses para registrar las wallets compatibles
de ese request. +
Finalmente con toda la información reunida el network service crypto addresses lanza un evento que
informa a la interfaz gráfica para que el usuario seleccione la wallet desde la cual agendar el
contacto. Por el momento sólo permitiremos que seleccione una wallet para aceptar la solicitud. +

Cuando se acepte o rechace una solicitud de contactó desaparecerá de la lista de pendientes.

El wallet contact debería llamar al método getCurrentExchangeState y cuando sea apropiado a getReceivedAddress
para mantener actualizada su información.

El wallet manager debería consultar el método getPendingRequests periódicamente. Informando sobre las
solicitudes a los distintos intra users asociados al Device User.

== Eventos

* Lanza el evento al wallet manager middleware para obtener la lista de wallets compatibles
* Lanza el que informa la nueva solicitud a la interfaz gráfica que contiene un elemento de tipo
PendingContactRequest
* Evento que notifica la aceptación de solicitud de otro usuario
* Evento que notifica el rechazo de solicitud de otro usuario

