= Outgoing Intra User

Este plugin es el encargado de realizar envíos de dinero a otros intra users. +
Similar al Outgoing Extra User su función es mantener un carater transaccional de diversos datos del
sistema, en este caso debe actualizar los balances de la basic wallet asociada a la wallet que envía
el pago, enviar la transacción a través de la red crypto e incorporamos el envío de información a
través de network services. +
Una diferencia con el envío de sólo la transacción (sin metadata) es que llevaremos un estado extra
para las transacciones que llamaremos Transaction Metadata State (o simplemente TMS). Este estado
reflejado en un enum nos dará el estado de la transacción del lado del destinatario, los valores son:

* NOT_IN_NETWORK_SERVICE_YET: Estado inicial, previo a enviarlo al network service local
* PROCESSING: Dado que uno puede pedir a un network service que envíe algo mientras no se está en línea,
este Estado lo colocará el network service hasta que envíe a la red el mensaje pedido.
* SENT: Lo coloca el network service al lograr enviar el mesnaje solicitado
* SEEN_BY_DESTINATION_NETWORK_SERVICE: Estado que se obtiene cuando el network service par informa la recepción del mensaje
* SEEN_BY_DESTINATION_VAULT: Estado que se obtiene cuando el receptor de la transacción vió la transacción crypto en la red
* CREDITED_IN_DESTINATION_WALLET; Estado que se obtiene cuando el receptor aplicó la transacción en el book balance de la wallet receptora.

El control de este campo extra será realizado por un agente nuevo que
llamaremos NotifierAgent. +

Analicemos el envío de una transacción bitcoin a un intra user.

Estemos enviando fiat o crypto al módulo transaccional siempre le llegará el valor crypto que debe
enviar sea pasado por el usuario o calculado por la wallet que llama al módulo transaccional. +
Lo primero que debemos hacer es controlar los fondos de la wallet, si estos son suficientes registramos
la creación de la transacción en una base de datos. +

La transacción irá a una tabla si es una transacción crypto y a otra si es una transacción fiat. +
Un agente mirará la tabla de transacciones crypto y otro mirará la tabla de transacciones de fiat. +
Estas tablas tienen información parcial de las transacciones que se irá completando en el proceso de
aplicación de la transacción como por ejemplo el hash de la transacción, la dirección crypto de origen,
etc. +

El procedimiento de ambos agentes será idéntico con la diferencia de los datos que envían a los network
services. +
Describiremos el proceso siguiendo los pasos que sigue el agente de crypto y marcaremos la diferencia
con lo que haría el agente de fiat cuando lo consideremos necesario. +

* Lo primero que debemos hacer es tomar las transacciones nuevas que debemos aplicar y verificar nuevamente
que tenemos fondos disponibles para aplicarlas. +
* Luego pedimos a la Crypto Vault que nos genere el hash de la transaccion y la dirección de origen que
va a usar para enviar la crypto currency. Con estos datos descontamos del Available Balance de la
wallet la cantidad que se envía y marcamos a la transacción con TransactionStatus PERSISTED_IN_AVAILABLE
en la tabla que lleva este plugin con Transaction Metadata State (TMS) NOT_IN_NETWORK_SERVICE_YET. +
* Luego tomamos las transacciones en estado PERSISTED_IN_AVAILABLE y pasamos a enviar la metadata a
través del network service correspondiente. En el caso de un envío de crypto será a través del Crypto
Transmission y en el caso de una transacción fiat será a través del Money Transmission. Al realizar
este envío pasamos la transacción al TransactionStatus METADATA_SENT y TMS PROCESSING. Dentro del
mensaje que se envía como metadata debe colocarse el hash de la transacción crypto asociada.
* En el siguiente paso tomamos todas las transacciones en METADATA_SENT y enviamos la transacción
a la Crypto Vault marcando el estado SENT_TO_CRYPTO_VAULT. +
* Finalemente realizamos el seguimiento para la actualización del balance de la misma forma en que lo
realizamos con un envío a un Extra User normal.
** Descontar del book balance al tener estado ON_BLOCKCHAIN
** Revertir las transacciones en los casos de REVERSED.
** Monitorear la transacción hasta el estado IRREVERSIBLE

En paralelo, el NotificationAgent va a consultar el estado de la metadata de cada transacción en estado
distinto de NOT_IN_NETWORK_SERVICE_YET en el network service correspondiente y actualizará la información
de confirmaciones a medida que las vaya recibiendo hasta que se llegue al estado CREDITED_IN_DESTINATION_WALLET. +
Esta metadata la actualizará tanto en su registro interno como en el plugin asociado a la wallet que
se esté trabajando en la capa basic wallet.