= Uso de Select en Transacciones

El PlugIn de Base de Datos tiene la opcion de definir un select sobre una tabla cuyo resultado se guarda en un variable que despues puede ser usada como valor de un campo de otra tabla en una sentencia de Upadate o Insert dentro de la misma transacción.
Tambien permite definir se se haran operaciones de suma o conteo sobre un campo del select, o especificar que campos de la tabla van a formar parte de la sentencia Select.
Esto ultimo puede ser usado tanto dentro de una transaccion como desde una consulta de datos simple.



== METODOS A USAR

* Para usar el select dentro de una transaccion se agrego en la interface DatabaseTransaction el metodo
```
public void addRecordToSelect(DatabaseTable selectTable, DatabaseTableRecord selectRecord);
```

Que recibe como parametros el objeto tabla sobre el cual se quiere hacer el select y el objeto record sobre el cual se hace el select.

* Para especificar los campos a usar en el Select se agrego a la interface DatabaseTable el siguientes metodo:
```
public void selectRecord (DatabaseTableRecord record) throws CantSelectRecordException;
```

Este metodo recibe un objeto de tipo DatabaseTableRecord donde se especifica el campo de la tabla a usar en el select, que puede ser uno o varios.

* Tambien se puede especificar si se va a usar una operacion sobre un campo del select como Suma o Conteo, usando el siguiente metodo:

```
 public void setSelectOperator(String columnName, DataBaseSelectOperatorType operator, String alias);
 ```

 El metodo recibe como parametros el nombre de la columna de la tabla a usar en la operacion, la operación de SUM y COUNT y el alias a usar como nombre para el resultado, el cual sera asignado a  un objeto de tipo DatabaseVariable.

 Las variables donde se guardan los resultados del select se pueden recuperar con el metodo de a interface DatabaseTable:

 ```
  public List<DatabaseVariable> getVariablesResult();

  ```

  Como nombre de la variable se usa el campo especificado en el select anteponiendo el @ para distinguir que es una variable.



=== Usando el select dentro de una transaccion de insert y/o update.

* Para poder usar el resultado de un select en un insert o update de otra tabla se agrego a la interface DatabaseTableRecord el siguiente metodo:

```
 public String getVariableName(String columnName);

 ```

 El parametro columnName tiene que ser el mismo nombre de campo especificado en el select, o el alias del campo, anteponiendo el simbolo @. Por ejemplo "@AviableBalance".


*Para decirle a la sentencia Update o Insert de la transaccion que tiene que usar el resultado de un campo del select como valor para asignarle a algun campo de la tabla se debe usar el siguiente metodo delobjeto DataBaseTableRecord:

```
public void setVariableValue (String columnName, String variableName);

```

El parametro columnName es el nombre del campo de la tabla al que se le va a asignar el valor de la variable obtenida del select. Elparametro variableName es el nombre del campo o alias que se obtiene del select anteponiendo el simbolo @.


**NOTA:**  Los metodos nuevos para hacer selects con operadores o especificando que campos obtener se pueden usar fuera de una transaccion, el resultado de la consulta se carga en un arreglo de campo|valor que se puede obtener con el metodo

 public List<DatabaseVariable> getVariablesResult(); del objeto DatabaseTable usado para hacer el select.

